name: Workflow

on:
  # Run on pushes to main..
  push:
    branches:
      - main
  # ..and any pull request.
  pull_request:

# Cancel any in progress run of the workflow for a given PR
# This avoids building outdated code
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  check-for-sh:
    name: Check for .sh
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - run: "echo '*** Do not write .sh scripts! ***'; ! find . -type f -name '*.sh' | grep ."
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: 'package.json'
          check-latest: true
      - run: yarn
      - run: yarn typecheck
      - run: yarn format:check
      - run: yarn lint
      - run: yarn solhint
  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/auth@140bb5113ffb6b65a7e9b937a81fa96cf5064462 # v2.1.11
        with:
          project_id: celo-mobile-mainnet
          credentials_json: ${{ secrets.MAINNET_SERVICE_ACCOUNT_KEY }}
      - name: Google Secrets
        id: google-secrets
        uses: google-github-actions/get-secretmanager-secrets@50ec04d56ddf2740b0bde82926cc742f90e06d2b # v2.2.4
        with:
          secrets: |-
            DIVVI_BOT_TOKEN:celo-mobile-mainnet/DIVVI_BOT_TOKEN
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.google-secrets.outputs.DIVVI_BOT_TOKEN }}
          # See https://github.com/actions/checkout?tab=readme-ov-file#push-a-commit-to-a-pr-using-the-built-in-token
          ref: ${{ github.head_ref || github.ref }}
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: 'package.json'
          check-latest: true
      - run: yarn
      - run: yarn docs
      - name: Check for documentation changes
        id: docs-changes
        run: |
          if [ -n "$(git status --porcelain docs/)" ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi
      - name: Commit documentation updates
        if: "${{ steps.docs-changes.outputs.changes == 'true' && github.event_name == 'pull_request' && !startsWith(github.event.head_commit.message, 'docs: auto-update') }}"
        run: |
          git config user.name "Divvi Bot"
          git config user.email "89419329+divvi-bot@users.noreply.github.com"
          git add docs/
          git commit -m "docs: auto-update"
          git push
  knip:
    name: Knip
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: 'package.json'
          check-latest: true
      - run: yarn
      - run: yarn knip
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: 'package.json'
          check-latest: true
      - run: yarn
      - run: yarn test
      # - name: Upload Coverage Report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     path: coverage/lcov-report
      # - name: 'Upload coverage to Codecov'
      #   uses: codecov/codecov-action@v3
  deploy-production:
    name: Deploy production
    if: github.ref == 'refs/heads/main'
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: google-github-actions/auth@140bb5113ffb6b65a7e9b937a81fa96cf5064462 # v2.1.11
        with:
          project_id: divvi-production
          credentials_json: ${{ secrets.DIVVI_PRODUCTION_SERVICE_ACCOUNT_KEY }}
      - uses: google-github-actions/setup-gcloud@6a7c903a70c8625ed6700fa299f5ddb4ca6022e9 # v2.1.5
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: 'package.json'
          check-latest: true
      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - run: yarn
      - name: Deploy rewardDivviEthCc2025IntegrationV1
        run: |
          yarn deploy:production:internal-single rewardDivviEthCc2025IntegrationV1 \
            --env-vars-file=cloud-functions/endpoints/rewardDivviEthCc2025IntegrationV1/config-production.yaml \
            --set-secrets REWARD_POOL_OWNER_PRIVATE_KEY=ETHCC2025_REWARD_POOL_OWNER_PRIVATE_KEY:latest
